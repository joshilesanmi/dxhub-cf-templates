AWSTemplateFormatVersion: 2010-09-09
Description: Codebuild projects & CodePipeline

Parameters:

  EnvironmentName:
    Description: The Stack Name for naming the resources
    Type: String
    # Default: trox-backend-new

  ServiceName1:
    Description: The name of first service
    Type: String
    # Default: GraphqlSvc

  CodestarConnection:
    Description: Connectio to github organization infopark-customers
    Type: String
    # Default: arn:aws:codestar-connections:eu-central-1:783446665867:connection/71bfae24-020c-4ff8-ad91-e239453c1c21

  RepositoryName:
    Type: String
    Description: The GitHub Repo Name
    # Default: infopark-customers/trox-ab-adapters

  BranchName:
    Type: String
    Description: The GitHub Repo Name
    # Default: feature/infra

  S3ArtifactBucket:
    Description: CodeBuild Service1 Role Arn
    Type: String
    # Default: codepipeline-eu-central-1-403931569879

Resources:

  # 1. CodeBuild Projects

  GraphqlCodeBuildApplication:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Description: !Sub "Build image for ${EnvironmentName} {ServiceName1}"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Value: trox
            Type: PLAINTEXT
            Name: CUSTOMER
          - Value: trox-backend
            Type: PLAINTEXT
            Name: PROJECT
      Name: !Sub "${EnvironmentName}-${ServiceName1}-develop-image"
      QueuedTimeoutInMinutes: 480
      ServiceRole: !ImportValue CodeBuildService1RoleArn # Required
      Source:
        BuildSpec: graphqlService/codepipeline/buildspec-image.yml
        Type: CODEPIPELINE
      Tags:
        - Key: user:project
          Value: !Sub ${ServiceName1}
        - Key: user:purpose
          Value: deployment
      TimeoutInMinutes: 60

  # 2. CodeDeploy Applications

  GraphqlCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub "AppECS-${EnvironmentName}-${ServiceName1}"
      ComputePlatform: ECS
      Tags:
        - Key: user:project
          Value: !Sub ${ServiceName1}
        - Key: user:purpose
          Value: deployment

  # 3. CodeDeploy DeploymentGroups

  GraphqlCodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref GraphqlCodeDeployApplication  # Required
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
          - DEPLOYMENT_STOP_ON_REQUEST
      BlueGreenDeploymentConfiguration:
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
        # GreenFleetProvisioningOption:
        #   Action: DISCOVER_EXISTING
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 60
      DeploymentGroupName: !Sub "DgpECS-${EnvironmentName}-${ServiceName1}"
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      ECSServices:
        - ClusterName: !ImportValue TroxCluster
          ServiceName: !ImportValue GraphqlECSServiceName
      LoadBalancerInfo:
        TargetGroupPairInfoList:
          - ProdTrafficRoute:
              ListenerArns:
                - !ImportValue GraphqlProdListenerArn
            TestTrafficRoute:
              ListenerArns:
                - !ImportValue GraphqlTestListenerArn
            TargetGroups:
              - Name: !ImportValue GraphqlTargetGroup1Name
              - Name: !ImportValue GraphqlTargetGroup2Name
      ServiceRoleArn: !ImportValue CodeDeployServiceRoleArn # Required
      Tags:
        - Key: user:project
          Value: !Sub ${ServiceName1}
        - Key: user:purpose
          Value: deployment

  # 4. CodePipeline

  GraphqlCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3ArtifactBucket
        Type: S3
      Name: !Sub "${EnvironmentName}-${ServiceName1}"
      RestartExecutionOnUpdate: false
      RoleArn: !ImportValue CodePipelineServiceRoleArn # Required
      Stages: # Required
        - Name: ImageSource
          Actions:
            - Name: Source
              Namespace: SourceVariables
              ActionTypeId:
                Owner: AWS
                Category: Source
                Version: "1"
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref CodestarConnection
                FullRepositoryId: !Ref RepositoryName
                BranchName: !Ref BranchName
                DetectChanges: true
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref GraphqlCodeBuildApplication
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifacts
              RunOrder: 1

        # - Name: Deploy
        #   Actions:
        #     - Name: Deploy
        #       ActionTypeId:
        #         Owner: AWS
        #         Category: Deploy
        #         Version: "1"
        #         Provider: CodeDeployToECS
        #       Configuration:
        #         ApplicationName: !Ref GraphqlCodeDeployApplication
        #         DeploymentGroupName: !Ref GraphqlCodeDeployGroup
        #         TaskDefinitionTemplateArtifact: BuildArtifacts
        #         AppSpecTemplateArtifact: BuildArtifacts
        #         AppSpecTemplatePath: appspec.yaml
        #         TaskDefinitionTemplatePath: taskdef.json
        #         Image1ArtifactName: BuildArtifacts
        #         Image1ContainerName: IMAGE
        #       InputArtifacts:
        #         - Name: BuildArtifacts
        #       RunOrder: 1

# Outputs:
