AWSTemplateFormatVersion: 2010-09-09
Description: AN ECS Cluster Template creating ECS Task Definition, ECS Service and CloudWatch groups

Parameters:

  EnvironmentName:
    Description: The Stack Name for naming the resources
    Type: String
    # Default: dxhub

  ServiceName:
    Description: The name of first service
    Type: String
    # Default: contactsvc

  # ContainerName:
  #   Description: The name of the Container
  #   Type: String
  #   # Default: webworker

  DxhubCluster:
    Description: The name of Dxhub Cluster
    Type: String
    # Default: dxhub

  PublicSubnet1a:
    Description: Dxhub PublicSubnet1a
    Type: String
    # Default: subnet-04ef6dbeac6590347

  PublicSubnet1b:
    Description: Dxhub PublicSubnet1b
    Type: String
    # Default: subnet-0d6515159c1192fc0

  PublicSubnet1c:
    Description: Dxhub PublicSubnet1c
    Type: String
    # Default: subnet-098a6dc7ffbd55c5e

  # PrivateSubnet1a:
  #   Description: Dxhub PrivateSubnet1a
  #   Type: String
  #   # Default: subnet-0250df016f025d304

  # PrivateSubnet1b:
  #   Description: Dxhub PrivateSubnet1b
  #   Type: String
  #   # Default: subnet-09f41e2ac8f83f639

  # PrivateSubnet1c:
  #   Description: Dxhub PrivateSubnet1b
  #   Type: String
  #   # Default: subnet-07260c658f4c2a3eb

  ECSTaskExecutionRole:
    Description: The arn for ecs task execution role arn
    Type: String
    # Default: arn:aws:iam::115379056088:role/dxhub-service-task-execution

  HoneyBagerkey:
      Description: HoneyBagerkey from Parameter Store for the container
      Type: String
      # Default: arn:aws:ssm:eu-west-2:012615398682:parameter/dxhub/HONEYBADGER_API_KEY

  DBHost:
    Description: DbHost from Parameter Store for the container
    Type: String
    # Default: arn:aws:ssm:eu-central-1:115379056088:parameter/dxhub/contactsvc/POSTGRES_HOST

  DBName:
    Description: DbHost from Parameter Store for the container
    Type: String
    # Default: arn:aws:ssm:eu-central-1:115379056088:parameter/dxhub/contactsvc/POSTGRES_DATABASE

  DBUsername:
    Description: Db username from Parameter Store for the container
    Type: String
    # Default: arn:aws:ssm:eu-central-1:115379056088:parameter/dxhub/contactsvc/POSTGRES_USERNAME

  DBPassword:
    Description: Db password from Parameter Store for the container
    Type: String
    # Default: arn:aws:ssm:eu-central-1:115379056088:parameter/dxhub/contactsvc/POSTGRES_PASSWORD
    
Resources:

#####
  # Important - Modify the !ImportValue If you modified the export values in the other templates - security, alb,
#####

  # 1. ECR Repositories

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${EnvironmentName}-${ServiceName}

  # 2. Task Definition

  ServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: !Ref ServiceName
          Memory: 128
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EnvironmentName}-${ServiceName}"
          PortMappings:
            - ContainerPort: 8101
              Protocol: tcp
              HostPort: 8101
          Command:
            - "/contactsvc"
            - "webworker"
            - "--grpc-addr"
            - ":8081"
          Secrets:
            - Name: HONEYBADGER_API_KEY
              ValueFrom: !Ref HoneyBagerkey
            - Name: POSTGRES_DATABASE
              ValueFrom: !Ref DBName
            - Name: POSTGRES_HOST
              ValueFrom: !Ref DBHost
            - Name: POSTGRES_USERNAME
              ValueFrom: !Ref DBUsername
            - Name: POSTGRES_PASSWORD
              ValueFrom: !Ref DBPassword
          Environment:
            - Name: AWS_XRAY_CONTEXT_MISSING
              Value: LOG_ERROR
            - Name: HONEYBADGER_ENV
              Value: production
            - Name: POSTGRES_PORT
              Value: "5432"
          HealthCheck: # Healthchecks need changes depending on the protocol
            Command:
              - "/bin/grpc_health_probe"
              - "-addr=:8101"
              # /grpc.health.v1.Health/Check --> target group healthcheck
            Interval: 5
            Retries: 3
            StartPeriod: 0
            Timeout: 30
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: /aws/ecs/dxhub
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Sub ${ServiceName}
        - Name: xray-daemon
          Cpu: 32
          Memory: 128
          Image: amazon/aws-xray-daemon
          PortMappings:
            - ContainerPort: 2000
              Protocol: udp
              HostPort: 2000
          HealthCheck:
            Command:
              - "CMD-SHELL"
              - "/xray --version || exit 1"
            Interval: 5
            Retries: 3
            StartPeriod: 0
            Timeout: 30
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-group: /aws/ecs/dxhub
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Sub ${ServiceName}-xray
      Cpu: .5vCPU
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Family: !Sub ${EnvironmentName}-${ServiceName}
      Memory: 1GB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
        - EC2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ServiceName}-TaskDefinition
      TaskRoleArn: !ImportValue dxhub-contactsvc-arn

  # 3. Service

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref DxhubCluster
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DeploymentController:
        Type: CODE_DEPLOY
      DesiredCount: 0
      EnableECSManagedTags: false
      EnableExecuteCommand: true
      # HealthCheckGracePeriodSeconds: Number
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: !Ref ServiceName
          ContainerPort: 8101
          TargetGroupArn: !ImportValue contactsvc-tg-1-arn # Change Expected
        - ContainerName: !Ref ServiceName
          ContainerPort: 8101
          TargetGroupArn: !ImportValue contactsvc-tg-2-arn # Change Expected
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !ImportValue contactsvc-sg # Change Expected
          Subnets: # Change Expected if Service is in another subnet
            - !Ref PublicSubnet1a
            - !Ref PublicSubnet1b
            - !Ref PublicSubnet1c
      # PlatformVersion: "String"
      PropagateTags: TASK_DEFINITION
      SchedulingStrategy: REPLICA
      ServiceName: !Sub ${ServiceName}
      TaskDefinition: !Ref ServiceTaskDefinition


Outputs:

#####
  # The export section creates a concatenation on the export name using ServiceName that you can import using !ImportValue function then with the exact format of the concatenated string
  # i.e !ImportValue neocrm-ecs-service
#####

  ECSServiceName:
    Description: Export for the ECSService
    Value: !GetAtt ECSService.Name
    Export:
      Name: !Sub ${ServiceName}-ecs-service
