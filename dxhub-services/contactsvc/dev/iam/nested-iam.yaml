AWSTemplateFormatVersion: 2010-09-09
Description: Iam Roles for ECS Service

Parameters:

  EnvironmentName:
    Description: The Stack Name for naming the resources
    Type: String
    # Default: dxhub

  ServiceName:
    Description: The name of first service
    Type: String
    # Default: contactsvc

Resources:

  # This is a role which is used by the ECS tasks themselves.
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-${ServiceName}
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess"
      Policies:
        -
          PolicyName: cw-logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Allow the ECS Tasks to write logs
              - Sid: CwLogsWrite
                Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:/aws/ecs/${EnvironmentName}*"
        -
          PolicyName: dxhub-use-shared-key
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: UseKMSKey
                Effect: "Allow"
                Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                  - kms:DescribeKey
                Resource: 
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/dxhub-shared"
        -
          PolicyName: ssm-channel-handling
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: SsmChannelHandling
                Effect: "Allow"
                Action:
                  # Allow the ECS Tasks to handle channels
                  - ssmmessages:CreateControlChannel
                  - ssmmessages:CreateDataChannel
                  - ssmmessages:OpenControlChannel
                  - ssmmessages:OpenDataChannel
                Resource: '*'
        -
          PolicyName: ssm-read
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: UseSSM
                Effect: "Allow"
                Action:
                  - ssm:Describe*
                  - ssm:Get*
                Resource: 
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvironmentName}/*"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvironmentName}/${ServiceName}/*"
              - Sid: UseSSMKey
                Effect: "Allow"
                Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                  - kms:DescribeKey
                Resource: 
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/ssm"
                # arn:aws:kms:eu-west-2:012615398682:key/70ade3bc-3eb5-4146-a757-1a99efd1a943
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/${EnvironmentName}*"
                - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/${EnvironmentName}-*"
        -
          PolicyName: cw-putmetrics
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CwPutMetricData
                Effect: "Allow"
                Action:
                # Allow the ECS Tasks to put metric data to CloudWatch (monitoring)
                  - cloudwatch:PutMetricData
                Resource: '*'

  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: ['sts:AssumeRole']
        Version: "2012-10-17"
      RoleName: !Sub codebuild-${EnvironmentName}-${ServiceName}-service-role
      # ManagedPolicyArns:
      #   - !Sub "arn:aws:iam::${AWS::AccountId}:policy/AWSCodePipelineServiceRole"
      Path: /
      Policies:
        -
          PolicyName: codebuild-base-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CwLogs
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${EnvironmentName}-*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${EnvironmentName}-${ServiceName}-*:log-stream:*"
              - Sid: S3WriteCodePipelineArtifacts
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*"
              - Sid: CodeBuildReports
                Effect: Allow
                Action:
                  - 'codebuild:CreateReportGroup'
                  - 'codebuild:CreateReport'
                  - 'codebuild:UpdateReport'
                  - 'codebuild:BatchPutTestCases'
                  - 'codebuild:BatchPutCodeCoverages'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${EnvironmentName}-*"
              - Sid: SecretsManagerGet
                Effect: Allow
                Action:
                  - 'secretsmanager:DescribeSecret'
                  - 'secretsmanager:GetSecretValue'
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${EnvironmentName}/*"
        -
          PolicyName: cloudfront-update-invalidate
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CloudFrontOperations
                Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                  - cloudfront:GetDistribution
                  - cloudfront:GetInvalidation
                  - cloudfront:UpdateDistribution
                Resource: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/*"
        -
          PolicyName: ecr-readwrite-dxhub-contactsvc
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: EcrAuth
                Effect: Allow
                Action:
                  - 'ecr:GetAuthorizationToken'
                Resource: '*'
              - Sid: EcrPush
                Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EnvironmentName}-*"
        -
          PolicyName: kms-decrypt-ssm-read
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid:  UseSSMkey
                Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource:
                  - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/ssm"
                  - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/dxhub-contactsvc"
              - Sid:  SsmList
                Effect: Allow
                Action:
                  - ssm:DescribeParameters
                Resource: '*'
              - Sid: SsmRead
                Effect: Allow
                Action:
                  - 'ssm:GetParameters'
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/codebuild*/*"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvironmentName}-${ServiceName}/*"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${EnvironmentName}*/*"
        -
          PolicyName: s3-readwrite-bucket-dxhub-contactsvc-doc
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid:  ObjectOperations
                Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListMultipartUploadParts
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${EnvironmentName}-${ServiceName}-doc/*"
              - Sid:  BucketOperations
                Effect: Allow
                Action:
                  - s3:GetEncryptionConfiguration
                  - s3:GetLifecycleConfiguration
                  - s3:PutLifecycleConfiguration
                  - s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${EnvironmentName}-${ServiceName}-doc"

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: [codedeploy.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS'
      RoleName: !Sub ${EnvironmentName}-${ServiceName}-ecs-codedeploy-role

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
            Action: ['sts:AssumeRole']
      RoleName: !Sub codepipeline-${EnvironmentName}-${ServiceName}-role
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/AWSCodePipelineServiceRole"
      Policies:
        -
          PolicyName: codepipeline-base-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CWlogs
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codepipeline/${EnvironmentName}-*"
              - Sid: S3Artifacts
                Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: !Sub "arn:aws:s3:::codepipeline-${AWS::Region}-*"
              - Sid: ECSTasks
                Effect: Allow
                Action:
                  - 'ecs:DescribeServices'
                  - 'ecs:DescribeTaskDefinition'
                  - 'ecs:DescribeTasks'
                  - 'ecs:ListTasks'
                  - 'ecs:RegisterTaskDefinition'
                  - 'ecs:UpdateService'
                Resource: "*"
              - Sid: CodeBuildReports
                Effect: Allow
                Action:
                  - 'codebuild:CreateReportGroup'
                  - 'codebuild:CreateReport'
                  - 'codebuild:UpdateReport'
                  - 'codebuild:BatchPutTestCases'
                  - 'codebuild:BatchPutCodeCoverages'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource: !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${EnvironmentName}-*"

Outputs:

#####
# Modify the Export Name to a desired name and the suffix with the expected value type (i.e. Arn) to reflect your choice and use it in other templates
#####

  ECSTaskRoleArn:
    Description: Export Value for the ECSTaskRole
    Value: !GetAtt ECSTaskRole.Arn
    Export:
      Name: contactsvc-ecs-task-role-arn
      # arn:aws:iam::698195851833:role/dxhub-contactsvc-ecs-task-role

  CodeBuildServiceRoleArn:
    Description: Export Arn Value for the CodeBuild Service Role
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: contactsvc-codebuild-service-role-arn
      # arn:aws:iam::698195851833:role/codebuild-contactsvc-service-role

  CodeDeployServiceRoleArn:
    Description: Export Arn Value for the CodeDeploy Service Role
    Value: !GetAtt CodeDeployServiceRole.Arn
    Export:
      Name: contactsvc-codedeploy-service-role-arn
      # arn:aws:iam::698195851833:role/AWSServiceForCodeDeploy2ECS

  CodePipelineServiceRoleArn:
    Description: Export Arn Value for the CodePipeline Service Role
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: contactsvc-codepipeline-service-role-arn
      # arn:aws:iam::698195851833:role/codepipeline-contactsvc-service-role
