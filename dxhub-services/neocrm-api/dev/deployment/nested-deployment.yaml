AWSTemplateFormatVersion: 2010-09-09
Description: Codebuild projects & CodePipeline

Parameters:

  EnvironmentName:
    Description: The Stack Name for naming the resources
    Type: String
    # Default: dxhub

  ServiceName:
    Description: The name of first service
    Type: String
    # Default: neocrm-api

  CodestarConnection:
    Description: Connection to github organization
    Type: String
    # Default: arn:aws:codestar-connections:eu-west-1:012615398682:connection/238a2259-f8c8-44d4-bf6b-5383a615cc29

  RepositoryName:
    Type: String
    Description: The GitHub Repo Name
    # Default: infopark/dxhub

  BranchName:
    Type: String
    Description: The GitHub Repo Name
    # Default: neocrm-dev

  S3ArtifactBucket:
    Description: CodeBuild Service Role Arn
    Type: String
    # Default: codepipeline-eu-west-2-0126153986

Resources:

  # 1. CodeBuild Projects

  NeoCrmApiCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Description: !Sub "Build image for ${EnvironmentName}-${ServiceName}"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub "${EnvironmentName}-${ServiceName}-develop-image"
      QueuedTimeoutInMinutes: 480
      ServiceRole: !ImportValue codebuild-neocrm-api-service-role # Required
      Source:
        BuildSpec: !Sub "${ServiceName}/codepipeline/buildspec-image.yml"
        Type: CODEPIPELINE
      # Tags:
      #   - Key: user:project
      #     Value: !Sub ${ServiceName}
      #   - Key: user:purpose
      #     Value: deployment
      TimeoutInMinutes: 60
  
  NeoCrmApiNotifyCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
        Name: notify
      BadgeEnabled: false
      Description: !Sub "Build image for ${EnvironmentName}-${ServiceName}-notify"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Cache:
        Type: S3
        Location: codepipeline-eu-west-2-0126153986/cache-deploy
      # LogsConfig:
      #   CloudWatchLogs:
      #     Status: ENABLED
      #     GroupName: !Sub "${EnvironmentName}-${ServiceName}-notify"
      #     StreamName: 
      Name: !Sub "${EnvironmentName}-${ServiceName}-notify"
      QueuedTimeoutInMinutes: 480
      ServiceRole: !ImportValue codebuild-neocrm-api-service-role
      Source:
        BuildSpec: !Sub "${ServiceName}/codepipeline/buildspec-notify.yml"
        Type: CODEPIPELINE
        InsecureSsl: false
      # Tags:
      #   - Key: user:project
      #     Value: !Sub ${ServiceName}
      #   - Key: user:purpose
      #     Value: deployment
      TimeoutInMinutes: 60

  # 2. CodeDeploy Applications

  NeoCrmApiCodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub "AppECS-${EnvironmentName}-${ServiceName}"
      ComputePlatform: ECS
      # Tags:
      #   - Key: user:project
      #     Value: !Sub ${ServiceName}
      #   - Key: user:purpose
      #     Value: deployment

  # 3. CodeDeploy DeploymentGroups

  NeoCrmApiCodeDeployGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref NeoCrmApiCodeDeployApplication  # Required
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
          - DEPLOYMENT_STOP_ON_REQUEST
      BlueGreenDeploymentConfiguration:
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
          WaitTimeInMinutes: 0
        # GreenFleetProvisioningOption:
        #   Action: DISCOVER_EXISTING
        TerminateBlueInstancesOnDeploymentSuccess:
          Action: TERMINATE
          TerminationWaitTimeInMinutes: 60
      DeploymentGroupName: !Sub "DgpECS-${EnvironmentName}-${ServiceName}"
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      ECSServices:
        - ClusterName: !ImportValue dxhub-cluster
          ServiceName: !ImportValue neocrm-api-ecs-service
      LoadBalancerInfo:
        TargetGroupPairInfoList:
          - ProdTrafficRoute:
              ListenerArns:
                - !ImportValue neocrm-api-prod-listener-arn
            TestTrafficRoute:
              ListenerArns:
                - !ImportValue neocrm-api-test-listener-arn
            TargetGroups:
              - Name: !ImportValue neocrm-api-tg-1-name
              - Name: !ImportValue neocrm-api-tg-2-name
      ServiceRoleArn: !ImportValue dxhub-codedeploy-service-role # Required
      # Tags:
      #   - Key: user:project
      #     Value: !Sub ${ServiceName1}
      #   - Key: user:purpose
      #     Value: deployment

  # 4. CodePipeline

  NeoCrmApiCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3ArtifactBucket
        Type: S3
      Name: !Sub "${EnvironmentName}-${ServiceName}"
      RestartExecutionOnUpdate: false
      RoleArn: !ImportValue dxhub-codepipeline-service-role # Required
      Stages: # Required
        - Name: Source
          Actions:
            - Name: Source
              Namespace: SourceVariables
              ActionTypeId:
                Owner: AWS
                Category: Source
                Version: "1"
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref CodestarConnection
                FullRepositoryId: !Ref RepositoryName
                BranchName: !Ref BranchName
                DetectChanges: true
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref NeoCrmApiCodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifacts
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: "1"
                Provider: CodeDeployToECS
              Configuration:
                ApplicationName: !Ref NeoCrmApiCodeDeployApplication
                DeploymentGroupName: !Ref NeoCrmApiCodeDeployGroup
                TaskDefinitionTemplateArtifact: BuildArtifacts
                AppSpecTemplateArtifact: BuildArtifacts
                AppSpecTemplatePath: appspec.yaml
                TaskDefinitionTemplatePath: taskdef.json
                Image1ArtifactName: BuildArtifacts
                Image1ContainerName: IMAGE
              InputArtifacts:
                - Name: BuildArtifacts
              RunOrder: 1

        - Name: Notify
          Actions:
            - Name: Notify
              ActionTypeId:
                Owner: AWS
                Category: Build
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref NeoCrmApiNotifyCodeBuild
              InputArtifacts:
                - Name: SourceArtifact
              # OutputArtifacts:
              #   - Name: BuildArtifacts
              RunOrder: 1

# Outputs:
