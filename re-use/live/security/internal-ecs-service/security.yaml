AWSTemplateFormatVersion: 2010-09-09
Description: >
  Template for the security groups: FargateContainer - SecurityGroups

Parameters:

  EnvironmentName:
    Description: An Environment Name to name the resources
    Type: String
    # Default: dxhub

  ServiceName:
    Description: The Service name
    Type: String
    # Default: contactsvc

  VpcId:
    Description: Dxhub VpcId
    Type: String
    # Default: vpc-090e086f59b874011

  InternalAlbSG:
    Description: dxhub internal alb sg
    Type: String
    # Default: sg-07c9788301fb28980

Resources:

  # A security group for the containers we will run in Fargate.

  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-${ServiceName}-sg
      GroupDescription: !Sub Access to the ${ServiceName} containers
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${ServiceName}-sg

  ServiceSecurityGroupIngressFromFargate:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from other containers in the same security group
      GroupId: !Ref ServiceSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref ServiceSecurityGroup

  ServiceIngressRule1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the InternalAlbSG
      GroupId: !Ref ServiceSecurityGroup
      IpProtocol: tcp
      FromPort: 8101
      ToPort: 8101
      SourceSecurityGroupId: !Ref InternalAlbSG

Outputs:

#####
  # The export section creates a concatenation on the export name using ServiceName that you can import using !ImportValue function then with the exact format of the concatenated string
  # i.e !ImportValue contactsvc-sg
#####

  ServiceSecurityGroup:
    Description: A security group for Service
    Value: !Ref ServiceSecurityGroup
    Export:
      Name: !Sub ${ServiceName}-sg

