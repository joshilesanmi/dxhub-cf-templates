AWSTemplateFormatVersion: 2010-09-09
Description: >
  Template for the security groups: LoadBalacer and FargateContainer -SecurityGroups

Parameters:

  EnvironmentName:
    Description: An Environment Name to name the resources
    Type: String
    # Default: dxhub

  CodeDeploy:
    Description: The Service name
    Type: String
    # Default: codedeploy-lifecycle

Resources:

  # A security group for the containers we will run in Fargate.
  # Two rules, allowing network traffic from a public facing load
  # balancer and from other members of the security group.
  #
  # If you want to make direct requests to a container using its
  # public IP address you'll need to add a security group rule
  # to allow traffic from all IP addresses.

  CodeDeployLifeCyleSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-${CodeDeploy}-sg
      GroupDescription: !Sub Access to the ${CodeDeploy} containers
      VpcId: !ImportValue VpcId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${CodeDeploy}-sg

  CodeDeployIngressRule1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the internal ALB
      GroupId: !Ref CodeDeployLifeCyleSG
      IpProtocol: tcp
      FromPort: 8443
      ToPort: 8443
      SourceSecurityGroupId: !Ref InternalAlbSG

  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-rds-sg
      GroupDescription: Access to the rds
      VpcId: !ImportValue VpcId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-rds-sg

  VPCEndpointSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-vpce-sg
      GroupDescription: Access to vpc endpoints
      VpcId: !ImportValue VpcId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-vpce-sg

  VPCEndpointSGIngressFromPublicALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the CodeDeployLifeCyleSG
      GroupId: !Ref VPCEndpointSG
      IpProtocol: -1
      SourceSecurityGroupId: !Ref CodeDeployLifeCyleSG

  # Load balancers for getting traffic to containers.
  # This sample template creates one load balancer:
  #
  # - One public load balancer, hosted in public subnets that is accessible
  #   to the public, and is intended to route traffic to one or more public
  #   facing services.

  # A public facing load balancer, this is used for accepting traffic from the public
  # internet and directing it to public facing microservices

  PublicLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-alb-sg
      GroupDescription: Access to the public facing Load Balancer
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIpv6: ::/0
        - IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIpv6: ::/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-alb-sg

  InternalAlbSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${EnvironmentName}-alb-internal-sg
      GroupDescription: !Sub ${EnvironmentName} Internal Alb Sg
      VpcId: !ImportValue VpcId
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-alb-internal-sg

  InternalAlbIngressRule1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the CodeDeployLifecycleSg
      GroupId: !Ref InternalAlbSG
      IpProtocol: tcp
      FromPort: 8443
      ToPort: 8443
      SourceSecurityGroupId: !Ref CodeDeployLifeCyleSG

  InternalAlbIngressRule2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the CodeDeployLifecycleSg
      GroupId: !Ref InternalAlbSG
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Ref CodeDeployLifeCyleSG

Outputs:

  CodeDeployLifeCyleSG:
    Description: A security group for CodeDeployLifeCyle
    Value: !Ref CodeDeployLifeCyleSG
    Export:
      Name: CodeDeployLifeCyleSG

  PublicLoadBalancerSG:
    Description: A security group for PublicLoadBalancer
    Value: !Ref PublicLoadBalancerSG
    Export:
      Name: PublicLoadBalancerSG

  InternalAlbSG:
    Description: A security group for InternalAlb
    Value: !Ref InternalAlbSG
    Export:
      Name: InternalAlbSG

  VPCEndpointSG:
    Description: A security group for VPCEndpoint
    Value: !Ref VPCEndpointSG
    Export:
      Name: VPCEndpointSG

  RDSSecurityGroup:
    Description: A security group for RDS
    Value: !Ref RDSSecurityGroup
    Export:
      Name: RDSSecurityGroup